version: '3.9'

services:
  users-django:
    build:
      context: ./users
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - static_volume:/app/staticfiles
      - ./users:/app
    depends_on:
      - psql_db
    restart: unless-stopped

  psql_db:
    image: postgres:14-alpine
    env_file:
      - .env
    expose:
      - "5432:5432"
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    volumes:
      - db_volume:/var/lib/postgresql/data
    restart: unless-stopped
  
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - users-django
    volumes:
      - static_volume:/app/staticfiles

  mq-consumer:
    build:
      context: ./email_service
    env_file:
      - .env
    depends_on:
      - users-django
      - rabbit_mq
    volumes:
      - ./email_service:/app
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    restart: unless-stopped
    command: python3 manage.py run_consumer

  email-celery:
    build:
      context: ./email_service
    command: celery -A email_service worker -l INFO
    volumes:
      - ./email_service:/app
    depends_on:
      - mq-consumer

  rabbit_mq:
    image: rabbitmq:3.12.10-management
    ports:
      - "15672:15672"
      - "5672:5672"  
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  static_volume:
  db_volume: